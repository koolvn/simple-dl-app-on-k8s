apiVersion: apps/v1
kind: Deployment
metadata:
  name: triton-deployment
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8002'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: triton
  template:
    metadata:
      labels:
        app: triton
    spec:
      volumes:
        - name: models
          nfs:
            server: 192.168.99.99
            path: /srv/nfs/storage/model-registry
            readOnly: false
      containers:
        - name: triton
          image: nvcr.io/nvidia/tritonserver:23.07-py3
          resources:
            limits:
              nvidia.com/gpu.shared: "1"
          ports:
            - containerPort: 8000
            - containerPort: 8001
            - containerPort: 8002
          volumeMounts:
            - mountPath: /models
              name: models
          command: [ "/bin/sh", "-c" ]
          args: [ "/opt/tritonserver/bin/tritonserver --model-repository=/models 
                  --allow-metrics=true --strict-model-config=false" ]
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: triton-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: triton-deployment
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Pods
      pods:
        metric:
          name: nv_gpu_utilization
        target:
          type: AverageValue
          averageValue: "20m"  # Example threshold, adjust as needed (20m ~= 2% of utilization)
---
apiVersion: v1
kind: Service
metadata:
  name: triton-inference-server
spec:
  selector:
    app: triton
  ports:
    - protocol: TCP
      port: 8000
      name: http
      targetPort: 8000
    - protocol: TCP
      port: 8001
      name: grpc
      targetPort: 8001
    - protocol: TCP
      port: 8002
      name: metrics
      targetPort: 8002